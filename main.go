package main

import (
	"flag"
	"log"
	"time"

	"github.com/briandowns/spinner"
	"org.freethegnomes.heartRate/internal/cmd"
	"org.freethegnomes.heartRate/internal/export"
	"org.freethegnomes.heartRate/internal/parse"
)

const (
	DirPath                = "./data"
	DefaultExportPath      = "./export"
	DefaultExportName      = "records"
	DefaultGraphExportPath = "./graphs"
)

var importPath = flag.String("import", DirPath, "Path to the directory containing heart rate recordings.")
var exportPath = flag.String("export", DefaultExportPath, "Path to export the processed files.")
var exportName = flag.String("export-name", DefaultExportName, "Base name for the exported files (without extension).")
var graphExportPath = flag.String("graph-export", DefaultGraphExportPath, "Path to export the graphs generated by the Python script.")

func main() {
	flag.Parse()
	s := spinner.New(spinner.CharSets[9], 200*time.Millisecond)
	s.Start()
	defer s.Stop()

	recordings, err := parse.Directory(*importPath)
	if err != nil {
		log.Fatalf("failed to parse directory: %v", err)
	}

	flatRecordings, err := parse.ConvertRecording(recordings)
	if err != nil {
		log.Fatalf("failed to convert records: %v", err)
	}

	s.UpdateSpeed(50 * time.Millisecond)
	if err := export.JSON(flatRecordings, *exportPath+"/"+*exportName+".json"); err != nil {
		log.Fatalf("failed to export JSON: %v", err)
	}

	if err := export.CSV(flatRecordings, *exportPath+"/"+*exportName+".csv"); err != nil {
		log.Fatalf("failed to export CSV: %v", err)
	}

	err = cmd.RunPythonScript("--csv", *exportPath+"/"+*exportName+".csv", "--export", *graphExportPath)
	if err != nil {
		log.Fatalf("failed to run python script: %v", err)
	}
}
